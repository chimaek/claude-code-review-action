# 통합 CI/CD 워크플로우
name: CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
    branches: [ main, master ]
  release:
    types: [created]

jobs:
  # 코드 리뷰 (보안 제한 적용)
  code-review:
    name: AI Code Review
    runs-on: ubuntu-latest
    # 본인만 자동 실행, 외부 PR은 승인 라벨 필요
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && (
        github.event.pull_request.user.login == 'chimaek' ||
        contains(github.event.pull_request.labels.*.name, 'code-review-approved')
      ))
    permissions:
      contents: read
      pull-requests: write
      issues: write
      # commit comments는 기본 토큰으로 권한 없음 - push 이벤트는 로그만 출력
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js for build
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Build action for self-test
      run: |
        npm ci
        npm run build
    
    - name: Self Code Review
      uses: ./
      with:
        anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        review_type: full
        language: ko
        file_patterns: "**/*.js,**/*.ts,**/*.jsx,**/*.tsx,**/*.py,**/*.java,**/*.go,**/*.rs"
        exclude_patterns: "dist/**,node_modules/**,test/**"
        max_files: 8
        severity_filter: medium
      continue-on-error: true

  # 외부 PR 보안 알림
  security-check:
    name: External PR Security Check
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request' &&
      github.event.pull_request.user.login != 'chimaek' &&
      !contains(github.event.pull_request.labels.*.name, 'code-review-approved')
    permissions:
      issues: write
      pull-requests: write
    
    steps:
    - name: Security warning for external PR
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const prNumber = context.issue.number;
          const prAuthor = context.payload.pull_request.user.login;
          
          await github.rest.issues.createComment({
            issue_number: prNumber,
            owner: owner,
            repo: repo,
            body: `🔒 **외부 기여자 PR 감지 / External Contributor PR Detected**
            
            @${prAuthor}님의 PR이 외부 기여자로 분류되어 자동 코드 리뷰가 비활성화되었습니다.
            
            **리포지토리 관리자에게:**
            - [ ] 코드에 악성 스크립트나 의심스러운 변경사항이 없는지 확인
            - [ ] Secrets나 환경변수에 접근하는 코드가 없는지 확인  
            - [ ] 파일 시스템 접근이나 네트워크 요청 코드 검토
            - [ ] 검토 완료 후 \`code-review-approved\` 라벨 추가하여 AI 리뷰 활성화
            
            **External contributor detected.** Auto code review disabled for security.
            **Repository maintainer:** Review code manually, then add \`code-review-approved\` label to enable AI review.`
          });

  # 빌드 및 테스트
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Verify build
      run: |
        if [ ! -f "dist/index.js" ]; then
          echo "Build failed: dist/index.js not found"
          exit 1
        fi
        echo "Build successful"

  # main 브랜치 push 시 dist 자동 업데이트
  update-dist:
    name: Update dist
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Build and commit
      run: |
        npm ci
        npm run build
        
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        if ! git diff --quiet dist/; then
          git add dist/
          git commit -m "chore: update dist [skip ci]"
          git push
        fi

  # 릴리스 생성 시 자동 배포
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Build for release
      run: |
        npm ci
        npm run build
    
    - name: Update release assets
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // dist.zip 생성
          const { execSync } = require('child_process');
          execSync('zip -r dist.zip dist/');
          
          // 릴리스에 dist.zip 추가
          const release = context.payload.release;
          await github.rest.repos.uploadReleaseAsset({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: release.id,
            name: 'dist.zip',
            data: fs.readFileSync('dist.zip')
          });